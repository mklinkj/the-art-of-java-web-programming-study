plugins {
  id 'java'
  id "io.freefair.lombok" version "${lombokPluginVersion}"
  id "org.gretty" version "${gretty3Version}"
  id 'war'
}

apply from: "../../gradle/common-func.gradle"

makeUploadDir()

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of("${javaVersion}")
  }
}

compileJava.options.encoding = "${projectEncoding}"
compileTestJava.options.encoding = "${projectEncoding}"

repositories {
  mavenCentral()
}

dependencies {
  implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
  implementation "org.apache.logging.log4j:log4j-slf4j2-impl:${log4jVersion}"

  implementation "org.apache.commons:commons-text:${commonsTextVersion}"
  implementation "commons-fileupload:commons-fileupload:${commonsFileUploadVersion}"

  runtimeOnly "com.oracle.database.jdbc:ojdbc8:${ojdbcVersion}"

  grettyRunnerTomcat9 "org.apache.tomcat:tomcat-dbcp:${tomcat9Version}"

  compileOnly "javax.servlet:javax.servlet-api:${javaxServletApiVersion}"
  compileOnly "javax.servlet.jsp:javax.servlet.jsp-api:${javaxServletJspApiVersion}"
  
  implementation "javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api:${javaxServletJspJstlApiVersion}"
  implementation "javax.servlet:jstl:${javaxServletJspJstlVersion}"

  implementation "net.sargue:java-time-jsptags:${javaTimeJspTagsJavaxVersion}"

  implementation "org.springframework:spring-jdbc:${spring5Version}"

  testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
  testImplementation "org.assertj:assertj-core:${assertJVersion}"
  testImplementation "org.mockito:mockito-core:${mockitoVersion}"
  testImplementation "org.mockito:mockito-inline:${mockitoVersion}"

  testRuntimeOnly "javax.servlet:javax.servlet-api:${javaxServletApiVersion}"

  testImplementation "com.github.h-thurow:simple-jndi:${simpleJndiVersion}"

  testImplementation "org.springframework:spring-test:${spring5Version}"
  testImplementation "org.springframework:spring-web:${spring5Version}"
}

// gradle appRun 으로 실행
gretty {
  httpPort = 8090
  contextPath = 'pro15'
  servletContainer = "tomcat9"
  inplaceMode = "hard"
  contextConfigFile = "${project.webAppDir}/META-INF/context.xml"
  enableNaming = true
  jvmArgs = [
      "--add-opens=java.base/java.io=ALL-UNNAMED",
      "--add-opens=java.base/java.lang=ALL-UNNAMED",
      "--add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED",
      "-Djava.security.egd=file:/dev/./urandom"
  ]
}

test {
  useJUnitPlatform()
  testLogging {
    outputs.upToDateWhen { false }
    showStandardStreams = true
  }
}
