plugins {
  id 'java'
  id "io.freefair.lombok" version "${lombokPluginVersion}"
  id 'org.springframework.boot' version "${springBootVersion}"
  id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of("${javaVersion}")
  }
}

[compileJava, compileTestJava]*.options*.encoding = "${projectEncoding}"

repositories {
  mavenCentral()
}


dependencies {
  // #################################### 
  // ### Spring Boot Starter 디펜던시 ### 
  // #################################### 

  implementation 'org.springframework.boot:spring-boot-starter-mail'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-web'

  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'


  // ##################################
  // ### Spring Boot - DB , MyBatis ###
  // ##################################
  runtimeOnly "com.oracle.database.jdbc:ojdbc11:${ojdbcVersion}"
  implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisSpringBootStarterVersion}"
  testImplementation "org.mybatis.spring.boot:mybatis-spring-boot-starter-test:${mybatisSpringBootStarterVersion}"


  // #############################
  // ### Spring Boot Thymeleaf ###
  // #############################
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
  implementation "nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect"
  // 없어도 되는지 확인 필요.
  implementation "org.thymeleaf.extras:thymeleaf-extras-java8time:${thymeleafExtrasJava8timeVersion}"


  // ####################
  // ### 외부 라이브러리 ###
  // ####################
  implementation "org.webjars:jquery:${jqueryVersion}"
  implementation "org.webjars:bootstrap:${bootstrapVersion}"
  implementation 'org.webjars:webjars-locator-core'

  implementation "net.coobird:thumbnailator:${thumbnailatorVersion}"
  implementation "org.springframework.vault:spring-vault-core:${springVaultVersion}"

  // 일단은 쓰는게 나을 것 같다. 편리한 메서드가 많음.
  implementation "commons-io:commons-io:${commonsIoVersion}"

  // test환경 validation시 필요한지 확인해야함.
  testRuntimeOnly "org.glassfish:jakarta.el:${jakartaElVersion}"
}

test {
  useJUnitPlatform()
  testLogging {
    outputs.upToDateWhen { false }
    showStandardStreams = true
  }
}
