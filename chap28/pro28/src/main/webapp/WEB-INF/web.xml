<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="https://jakarta.ee/xml/ns/jakartaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee
                      https://jakarta.ee/xml/ns/jakartaee/web-app_6_0.xsd"
  version="6.0"
>
  <!--
    metadata-complete="true" 옵션이 설정되면
    web.xml 파일을 src/main/webapp/WEB-INF 위치에 만들어 둘 경우
    서블릿 클래스에 붙여둔 @WebServlet(urlPatterns = "/urlPattern") 가 동작을 안한다.
    서블릿 매핑을 web.xml 파일에서만 설정해야함.

    그래서 metadata-complete="true" 설정을 제거했다.
  -->
  <display-name>Chap28_Servlet</display-name>

  <!-- Spring 컨택스트 정리보다 나중에 실행 되도록 ContextLoaderListener 보다 앞에 위치해야한다. -->
  <listener>
    <display-name>JDBC Driver Cleaner</display-name>
    <listener-class>org.mklinkj.taojwp.common.listener.JDBCDriverCleaner</listener-class>
  </listener>

  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
      classpath:config/root-context.xml
      classpath:config/security-context.xml
    </param-value>
  </context-param>

  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>


  <filter>
    <filter-name>CharacterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CharacterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <filter>
    <display-name>springMultipartFilter</display-name>
    <filter-name>springMultipartFilter</filter-name>
    <filter-class>org.springframework.web.multipart.support.MultipartFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>springMultipartFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <filter>
    <filter-name>springSecurityFilterChain</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <servlet>
    <servlet-name>action</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <load-on-startup>1</load-on-startup> <!-- 값이 1 이상이면 Tomcat 실행시 미리 메모리에 로드 -->
    <multipart-config>
      <!-- 임시 파일을 저장할 공간 : 기본은 시스템 임시 폴더이다.  -->
      <!--<location>${java.io.tmpdir}</location>-->
      <!-- 업로드되는 파일의 최대 크기 -->
      <max-file-size>10485760</max-file-size> <!-- 10MB -->
      <!-- 한번에 올릴 수 있는 최대 크기 -->
      <max-request-size>52428800</max-request-size> <!-- 50MB -->
      <!-- 파일이 메모리에 기록되는 임계값  -->
      <file-size-threshold>10485760</file-size-threshold> <!-- 10MB -->
    </multipart-config>
  </servlet>


  <servlet-mapping>
    <servlet-name>action</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.xhtml</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>

</web-app>
